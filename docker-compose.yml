services:
  postgres:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - db_network

  monetdb:
    build:
      context: .
      dockerfile: docker/monetdb/Dockerfile
    environment:
      - MONETDB_DATABASE=${MONETDB_DB}
      - MONETDB_USER=${MONETDB_USER}
      - MONETDB_PASSWORD=${MONETDB_PASSWORD}
    ports:
      - "${MONETDB_PORT}:50000"
    volumes:
      - monetdb_data:/var/monetdb5/dbfarm
    healthcheck:
      test: ["CMD", "monetdb", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - db_network

  analyzer:
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - MONETDB_USER=${MONETDB_USER}
      - MONETDB_PASSWORD=${MONETDB_PASSWORD}
      - MONETDB_DB=${MONETDB_DB}
      - MONETDB_HOST=monetdb
      - MONETDB_PORT=50000
      - BATCH_SIZE=${BATCH_SIZE}
      - DATA_DIR=${DATA_DIR}
    volumes:
      - ./data:/app/data
      - ./results:/app/results
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      monetdb:
        condition: service_healthy
    networks:
      - db_network

volumes:
  postgres_data:
  monetdb_data:

networks:
  db_network:
    driver: bridge
