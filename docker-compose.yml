version: "3.8"

services:
  app:
    build: .
    container_name: python_app
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      monetdb:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-databaseAnnalizationProject}
      - POSTGRES_HOST=postgres
      - MONETDB_USER=${MONETDB_USER:-monetdb}
      - MONETDB_PASSWORD=${MONETDB_PASSWORD:-monetdb}
      - MONETDB_DB=${MONETDB_DB:-databaseAnnalizationProject}
      - MONETDB_HOST=monetdb

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-databaseAnnalizationProject}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  monetdb:
    image: monetdb/monetdb:latest
    container_name: monet_db
    environment:
      MDB_DB_NAME: ${MONETDB_DB:-databaseAnnalizationProject}
      MDB_USER: ${MONETDB_USER:-monetdb}
      MDB_PASSWORD: ${MONETDB_PASSWORD:-monetdb}
    ports:
      - "50001:50000"
    volumes:
      - monetdb_data:/var/monetdb5/dbfarm
    healthcheck:
      test:
        [
          "CMD",
          "mclient",
          "-u",
          "${MONETDB_USER:-monetdb}",
          "-d",
          "${MONETDB_DB:-databaseAnnalizationProject}",
          "-p",
          "${MONETDB_PASSWORD:-monetdb}",
          "-s",
          "SELECT 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  monetdb_data:

networks:
  default:
    name: benchmark_network
